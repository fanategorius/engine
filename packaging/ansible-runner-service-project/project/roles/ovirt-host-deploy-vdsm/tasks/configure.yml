---
# Configure vdsm.
#
# NOTE: This must be done after creating host vdsm.id file.
#
# Order of next steps is important:
#     1. Configure lvm filter
#     2. Configure vdsm
#
# If we configure vdsm before configuring lvm filter, multipath may
# grab local devices that should be blacklisted. This may expose
# the local devices as FC storage in engine.

- block:
  - name: mask libvirt modular daemon units
    systemd:
      name: "{{ item }}"
      state: stopped
      enabled: no
      masked: yes
    with_items:
      - virtqemud.service
      - virtqemud.socket
      - virtinterfaced.socket
      - virtnetworkd.socket
      - virtnodedevd.socket
      - virtnwfilterd.socket
      - virtsecretd.socket
      - virtstoraged.socket
      - virtproxyd.socket

  - name: enable libvirtd monolithic daemon unit
    systemd:
      name: libvirtd
      enabled: yes

  - name: remove virtqemud socket
    file:
      path: /run/libvirt/virtqemud-sock
      state: absent

  # workaround for BZ 2054323
  - name: Change the openvswitch_t to permissive
    command: semanage permissive -a openvswitch_t
    changed_when: True

  when: el_ver|int >= 9


- name: Configure LVM filter
  command: vdsm-tool config-lvm-filter -y
  register: lvm_filter_result
  when: el_ver|int >= 8
  ignore_errors: true

- name: Check for LVM filter configuration error
  debug:
    msg: "[ERROR] Cannot configure LVM filter on host, please run: vdsm-tool config-lvm-filter"
  when:
    - el_ver|int >= 8
    - lvm_filter_result.rc != 0

- name: Configure host for vdsm
  command: vdsm-tool configure --force
  changed_when: True

- name: add vdsm-mom allow rule to fapolicy
  copy:
   dest: /etc/fapolicyd/rules.d/32-allow-vdsm-mom.rules
   group: fapolicyd
   mode: '0644'
   remote_src: yes
   content: |
     allow perm=any trust=1 : dir=/etc/vdsm/mom.d/ ftype=text/x-lisp
  when: ansible_distribution == 'RedHat'

- name: collect facts about system services
  service_facts:

- name: restart fapolicy service
  systemd:
   state: restarted
   name: fapolicyd
  when:
    - "'fapolicyd.service' in services"
    - ansible_facts.services["fapolicyd.service"].state == 'running'
